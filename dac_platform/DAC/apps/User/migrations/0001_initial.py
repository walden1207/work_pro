# Generated by Django 2.0.7 on 2019-05-07 10:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('compID', models.IntegerField(blank=True, null=True, verbose_name='公司ID')),
                ('compName', models.CharField(blank=True, max_length=255, null=True, verbose_name='公司名称')),
                ('telephone', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='邮箱')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='用户名')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True, verbose_name='激活状态')),
                ('is_staff', models.BooleanField(default=False, verbose_name='允许登录后台')),
                ('data_joined', models.DateTimeField(auto_now_add=True)),
                ('token', models.CharField(max_length=255, unique=True, verbose_name='前后端密令')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'edge_users',
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
        ),
    ]
